package components;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;

public class SelectionButtons  extends JPanel {
    /**
     * An ArrayList of JToggleButtons that contains all of the buttons generated by the constructor.
     */
    private ArrayList<JToggleButton> generatedToggleButtons;

    /**
     * Constructs a new SelectionButtons object with the specified name, radio buttons, and type.
     * @param name the name of the panel, which will be displayed as a titled border
     * @param radioButtons an array of strings representing the text for each button
     * @param isRadioButton a boolean that determines whether the buttons will be radio buttons or check boxes
     */
    public SelectionButtons(String name, String[] radioButtons, boolean isRadioButton)
    {
        generatedToggleButtons = new ArrayList<>();

        var buttonGroup = new ButtonGroup();
        this.setBorder(BorderFactory.createTitledBorder(name));
        this.setLayout(new GridBagLayout());
        this.setPreferredSize(new Dimension(100, 200));

        var localPanelConstraints = new GridBagConstraints();
        localPanelConstraints.gridx = 0;
        localPanelConstraints.gridy = 0;
        localPanelConstraints.fill = GridBagConstraints.BOTH;

        // iterate through the array of radio button texts
        for (var i : radioButtons) {
            JToggleButton selectionButton;
            if (isRadioButton)
                selectionButton = new JRadioButton();
            else
                selectionButton = new JCheckBox();

            generatedToggleButtons.add(selectionButton);

            selectionButton.setText(i);
            this.add(selectionButton, localPanelConstraints);

            if (isRadioButton)
                buttonGroup.add(selectionButton);

            localPanelConstraints.gridy++;
        }
    }

    /**
     * Returns an ArrayList of all the generated JToggleButtons.
     * @return an ArrayList of all the generated JToggleButtons
     */
    public ArrayList<JToggleButton> getGeneratedToggleButtons() {
        return generatedToggleButtons;
    }

}
